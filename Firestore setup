// ... (Firebase Admin SDK initialization and other middleware) ...
app.use(express.json()); // To parse request bodies

app.post('/transactions', authenticate, async (req, res) => {
  try {
    const { description, amount, category, date } = req.body;
    const userId = req.user.uid;

    const newTransaction = {
      userId: userId,
      description,
      amount: parseFloat(amount),
      category,
      date: new Date(date).toISOString(), // Store date as ISO string
      createdAt: admin.firestore.FieldValue.serverTimestamp()
    };

    const docRef = await admin.firestore().collection('transactions').add(newTransaction);
    res.status(201).json({ id: docRef.id, message: 'Transaction added successfully' });
  } catch (error) {
    console.error('Error adding transaction:', error);
    res.status(500).json({ error: 'Failed to add transaction' });
  }
});


app.get('/transactions', authenticate, async (req, res) => {
  try {
    const userId = req.user.uid;
    const transactionsSnapshot = await admin.firestore().collection('transactions')
      .where('userId', '==', userId)
      .orderBy('date', 'desc')
      .get();

    const transactions = [];
    transactionsSnapshot.forEach(doc => {
      transactions.push({ id: doc.id, ...doc.data() });
    });

    res.json(transactions);
  } catch (error) {
    console.error('Error fetching transactions:', error);
    res.status(500).json({ error: 'Failed to fetch transactions' });
  }
});
